##########################################
# CREAR USUARIOS
##########################################

# ===== MASTER 1 (Laptop 1) =====
docker exec -it mysql-master1 /bin/bash
mysql -u root -p

-- Usuario para replicación
CREATE USER 'replicator'@'%' IDENTIFIED WITH mysql_native_password BY 'repl_password_123';
GRANT REPLICATION SLAVE ON *.* TO 'replicator'@'%';

-- Usuario para monitoreo de ProxySQL
CREATE USER 'proxysql_monitor'@'%' IDENTIFIED BY 'monitor_pass';
GRANT REPLICATION CLIENT, RELOAD ON *.* TO 'proxysql_monitor'@'%';

-- Usuario para la aplicación
CREATE USER 'app_user'@'%' IDENTIFIED BY 'app_password';
GRANT ALL PRIVILEGES ON test_db.* TO 'app_user'@'%';

FLUSH PRIVILEGES;
exit


# ===== MASTER 2 (Laptop 2) =====
docker exec -it mysql-master2 /bin/bash
mysql -u root -p

CREATE USER 'replicator'@'%' IDENTIFIED WITH mysql_native_password BY 'repl_password_123';
GRANT REPLICATION SLAVE ON *.* TO 'replicator'@'%';

CREATE USER 'proxysql_monitor'@'%' IDENTIFIED BY 'monitor_pass';
GRANT REPLICATION CLIENT, RELOAD ON *.* TO 'proxysql_monitor'@'%';

CREATE USER 'app_user'@'%' IDENTIFIED BY 'app_password';
GRANT ALL PRIVILEGES ON test_db.* TO 'app_user'@'%';

FLUSH PRIVILEGES;
exit


# ===== SLAVE (VirtualBox) =====
docker exec -it mysql-slave /bin/bash
mysql -u root -p

CREATE USER 'proxysql_monitor'@'%' IDENTIFIED BY 'monitor_pass';
GRANT REPLICATION CLIENT ON *.* TO 'proxysql_monitor'@'%';

CREATE USER 'app_user'@'%' IDENTIFIED BY 'app_password';
GRANT SELECT ON mydata.* TO 'app_user'@'%';  -- Solo lectura

FLUSH PRIVILEGES;

SET GLOBAL read_only = 1;
SET GLOBAL super_read_only = 1;

-- Verificar
SHOW VARIABLES LIKE '%read_only%';

exit

##########################################
# RESET GTIDs
##########################################

# Master 1
docker exec -it mysql-master1 mysql -u root -p
RESET MASTER;
SHOW MASTER STATUS;
exit

# Master 2
docker exec -it mysql-master2 mysql -u root -p
RESET MASTER;
SHOW MASTER STATUS;
exit

##########################################
# REPLICACIÓN
##########################################

# ===== Master1 replica DESDE Master2 =====
docker exec -it mysql-master1 mysql -u root -p

CHANGE REPLICATION SOURCE TO
  SOURCE_HOST = '100.87.129.54',
  SOURCE_USER = 'replicator',
  SOURCE_PASSWORD = 'repl_password_123',
  SOURCE_AUTO_POSITION = 1,
  GET_SOURCE_PUBLIC_KEY = 1;

START REPLICA;
SHOW REPLICA STATUS\G


# ===== Master2 replica DESDE Master1 =====
docker exec -it mysql-master2 mysql -u root -p

CHANGE REPLICATION SOURCE TO
  SOURCE_HOST = '100.125.125.26',
  SOURCE_USER = 'replicator',
  SOURCE_PASSWORD = 'repl_password_123',
  SOURCE_AUTO_POSITION = 1,
  GET_SOURCE_PUBLIC_KEY = 1;

START REPLICA;
SHOW REPLICA STATUS\G

# ===== Slave replica DESDE Master2 =====
docker exec -it mysql-slave mysql -u root -p

CHANGE REPLICATION SOURCE TO
  SOURCE_HOST = '100.87.129.54',
  SOURCE_USER = 'replicator',
  SOURCE_PASSWORD = 'repl_password_123',
  SOURCE_AUTO_POSITION = 1,
  GET_SOURCE_PUBLIC_KEY = 1;

START REPLICA;
SHOW REPLICA STATUS\G

# ===== Crear tabla en Master1 e insertar registro =====
docker exec -it mysql-master1 mysql -u root -p

USE test_db;
CREATE TABLE test_replication (
    id INT AUTO_INCREMENT PRIMARY KEY,
    source VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO test_replication (source) VALUES ('master1-laptop1');
SELECT * FROM test_replication;
exit


# ===== Prueba 2: Insertar en Master2 =====
docker exec -it mysql-master2 mysql -u root -p
USE test_db;
INSERT INTO test_replication (source) VALUES ('master2-laptop2');
SELECT * FROM test_replication ORDER BY id;
exit


# ========= POWERSHELL CONNECTION TEST ============ #
Test-NetConnection -ComputerName 100.87.129.54 -Port 3306     # Connection from laptop 1 to laptop 2
Test-NetConnection -ComputerName 100.125.125.26 -Port 3306    # Connection from laptop 2 to laptop 1